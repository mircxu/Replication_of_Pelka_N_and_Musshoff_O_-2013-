library(tidyverse)
library(purrr)
library(readxl)
library(lubridate)
library(rdwd)

# Importing data
geo_data_raw <- read_excel('georeferencedata.xlsx')
final_data_raw <- read.csv('Final_data.csv')

# Preparing Geo Data
names(geo_data_raw) <- gsub(' ', '_', tolower(names(geo_data_raw)))

geo_data <- geo_data_raw %>%
  select(geo_point, land_code, kreis_name, kreis_code) %>%
  mutate(
    geo_point = str_split(geo_point, pattern = ', '),
    geo_point_latd = as.numeric(map(geo_point, ~ .x[[1]])),
    geo_point_lang = as.numeric(map(geo_point, ~ .x[[2]])),
    kreis_code = as.character(kreis_code)
  ) %>%
  unnest(cols = c('geo_point_lang', 'geo_point_latd')) %>%
  select(-geo_point)

# Define the range of years we are interested in
required_years <- 2006:2021

# Filter districts with complete data from 2006 to 2021
filtered_data <- final_data_raw %>%
  # Filter for specific 'var' and 'measure'
  filter(var == 'ww' & measure == 'yield') %>%
  # Remove rows with NA values in important columns 
  drop_na(value) %>%
  # Group by district
  group_by(district) %>%
  # Filter districts with data for all required years
  filter(all(required_years %in% year)) %>%
  ungroup() %>%
  # Ensure data includes only rows from required years
  filter(year %in% required_years) %>%
  # Multiply values by 10
  mutate(value = value * 10)

# Remove the 'outlier' column if all its values are 0
if ("outlier" %in% colnames(filtered_data)) {
  if (all(filtered_data$outlier == 0)) {
    filtered_data <- filtered_data %>% select(-outlier)
  }
}

# Write the filtered data to a new CSV file
write.csv(filtered_data, "filtered_data_raw.csv", row.names = FALSE)
