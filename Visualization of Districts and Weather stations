# Load necessary libraries
library(tidyverse)
library(ggplot2)
library(sf)
library(rnaturalearth)
library(rnaturalearthdata)
# Load necessary libraries
library(dplyr)

# Read the CSV files
stations_df <- read.csv("stations_df_all.csv")
rain_df <- read.csv("allstations_rain.csv")
temp_df <- read.csv("allstations_temp.csv")

# Extract the station IDs from the column names, removing the 'X' prefix
rain_station_ids <- gsub("X", "", names(rain_df)[-1])
temp_station_ids <- gsub("X", "", names(temp_df)[-1])

# Convert the station IDs to numeric
rain_station_ids <- as.numeric(rain_station_ids)
temp_station_ids <- as.numeric(temp_station_ids)

# Combine the station IDs from both rain and temp
combined_station_ids <- union(rain_station_ids, temp_station_ids)

# Filter the stations_df to only include those station_ids
filtered_stations_df <- stations_df %>% filter(stations_id %in% combined_station_ids)

# Save the filtered DataFrame to a new CSV file
write.csv(filtered_stations_df, "for visualization.csv", row.names = FALSE)

# Load the datasets
stations_data <- read.csv('for visualization.csv')
district_data <- read.csv('Final_data_Station.csv')

# Filter for unique station IDs
unique_stations_data <- stations_data %>%
  distinct(stations_id, .keep_all = TRUE)

# Filter for unique district_no
unique_district_data <- district_data %>%
  distinct(district_no, .keep_all = TRUE)

# Get the map of Germany
germany <- ne_countries(scale = "medium", returnclass = "sf") %>%
  filter(name == "Germany")

# Plotting unique stations and unique districts on the map of Germany
ggplot(data = germany) +
  geom_sf(fill = "white", color = "black") +  # Germany map
  geom_point(data = unique_district_data, aes(x = geo_point_lang, y = geo_point_latd, color = "Districts"), size = 2, alpha = 0.7) +
  geom_point(data = unique_stations_data, aes(x = geolaenge, y = geobreite, color = "Weather Stations"), size = 2, alpha = 0.7) +
  coord_sf() +
  theme_minimal() +
  labs(
    x = "Longitude",
    y = "Latitude",
    color = "Locations"
  ) +
  scale_color_manual(values = c("Districts" = "blue", "Weather Stations" = "red")) +
  theme(legend.position = "bottom")

# Save the plot
ggsave("unique_districts_weather_stations_map_germany.png", width = 10, height = 8)
