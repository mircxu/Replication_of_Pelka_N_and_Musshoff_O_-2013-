# Load required libraries
library(tidyverse)
library(boot)

# Step 1: Define the function to find the best period (highest RÂ²)
find_best_period <- function(data, formula) {
  data %>%
    group_by(Correlation) %>%   # Correlation holds the time period, e.g., "3:3", "3:4"
    summarise(correlation = summary(lm(formula, data = cur_data()))$r.squared) %>%
    arrange(desc(correlation)) %>%
    slice(1) %>%
    pull(Correlation)
}

# Step 2: Find the best periods for each index
best_period_precipitation <- find_best_period(merged_data, Yield ~ IR + IR_t_squared)
best_period_temperature <- find_best_period(merged_data, Yield ~ IT + IT_t_squared)
best_period_mixed <- find_best_period(merged_data, Yield ~ IR + IT + IR_t_squared + IT_t_squared + IR_t_IT_t)
best_period_two_simple <- find_best_period(merged_data, Yield ~ IR + IT)

print(paste("Best period for Precipitation Index:", best_period_precipitation))
print(paste("Best period for Temperature Index:", best_period_temperature))
print(paste("Best period for Mixed Index:", best_period_mixed))
print(paste("Best period for Two Simple Indices:", best_period_two_simple))

# Step 3: Filter data for the best periods
data_precipitation <- merged_data %>% filter(Correlation == best_period_precipitation)
data_temperature <- merged_data %>% filter(Correlation == best_period_temperature)
data_mixed <- merged_data %>% filter(Correlation == best_period_mixed)
data_two_simple <- merged_data %>% filter(Correlation == best_period_two_simple)

# Step 4: Run regression models for each index type
model_precipitation <- lm(Yield ~ IR + IR_t_squared, data = data_precipitation)
model_temperature <- lm(Yield ~ IT + IT_t_squared, data = data_temperature)
model_mixed <- lm(Yield ~ IR + IT + IR_t_squared + IT_t_squared + IR_t_IT_t, data = data_mixed)
model_two_simple <- lm(Yield ~ IR + IT, data = data_two_simple)

# Step 5: Predict yields and calculate strike levels
calculate_strike_levels <- function(data, model) {
  data %>%
    mutate(prediction = predict(model, newdata = data)) %>%
    group_by(district_no) %>%
    summarise(
      strike_level = mean(prediction, na.rm = TRUE)
    )
}

strike_precipitation <- calculate_strike_levels(data_precipitation, model_precipitation)
strike_temperature <- calculate_strike_levels(data_temperature, model_temperature)
strike_mixed <- calculate_strike_levels(data_mixed, model_mixed)
strike_two_simple <- calculate_strike_levels(data_two_simple, model_two_simple)

# Step 6: Bootstrap payouts and calculate fair premiums
bootstrap_payout <- function(data, strike_level, n_iterations = 10000, r = 0.05, years = 15) {
  payouts <- pmax(data$Yield - strike_level, 0)  # Call option payout
  mean_payout <- mean(payouts, na.rm = TRUE)
  
  # Bootstrap resampling
  boot_results <- boot(payouts, function(d, i) mean(d[i], na.rm = TRUE), R = n_iterations)
  boot_mean <- mean(boot_results$t)
  fair_premium <- boot_mean / (1 + r)^years  # Discounted fair premium
  
  list(fair_premium = fair_premium, boot_results = boot_results)
}

# Calculate for each index
bootstrap_precipitation <- bootstrap_payout(data_precipitation, strike_precipitation$strike_level)
bootstrap_temperature <- bootstrap_payout(data_temperature, strike_temperature$strike_level)
bootstrap_mixed <- bootstrap_payout(data_mixed, strike_mixed$strike_level)
bootstrap_two_simple <- bootstrap_payout(data_two_simple, strike_two_simple$strike_level)

# Step 7: Hedging effectiveness
calculate_hedging_effectiveness <- function(data, strike_level) {
  data %>%
    mutate(
      payout = pmax(Yield - strike_level, 0),
      revenue_with_hedge = Yield + payout
    ) %>%
    summarise(
      std_without_hedge = sd(Yield, na.rm = TRUE),
      std_with_hedge = sd(revenue_with_hedge, na.rm = TRUE),
      hedging_effectiveness = (std_without_hedge - std_with_hedge) / std_without_hedge * 100
    )
}

hedging_precipitation <- calculate_hedging_effectiveness(data_precipitation, strike_precipitation$strike_level)
hedging_temperature <- calculate_hedging_effectiveness(data_temperature, strike_temperature$strike_level)
hedging_mixed <- calculate_hedging_effectiveness(data_mixed, strike_mixed$strike_level)
hedging_two_simple <- calculate_hedging_effectiveness(data_two_simple, strike_two_simple$strike_level)

# Step 8: Results Summary
results <- list(
  Precipitation = list(
    Best_Period = best_period_precipitation,
    Fair_Premium = bootstrap_precipitation$fair_premium,
    Hedging_Effectiveness = hedging_precipitation
  ),
  Temperature = list(
    Best_Period = best_period_temperature,
    Fair_Premium = bootstrap_temperature$fair_premium,
    Hedging_Effectiveness = hedging_temperature
  ),
  Mixed = list(
    Best_Period = best_period_mixed,
    Fair_Premium = bootstrap_mixed$fair_premium,
    Hedging_Effectiveness = hedging_mixed
  ),
  Two_Simple = list(
    Best_Period = best_period_two_simple,
    Fair_Premium = bootstrap_two_simple$fair_premium,
    Hedging_Effectiveness = hedging_two_simple
  )
)

# Print results
print("Summary of Results:")
print(results)

# Save results to files
write_csv(data_precipitation, "data_best_precipitation.csv")
write_csv(data_temperature, "data_best_temperature.csv")
write_csv(data_mixed, "data_best_mixed.csv")
write_csv(data_two_simple, "data_best_two_simple.csv")

cat("Analysis complete. Results saved to CSV files.\n")
