# Load necessary libraries
library(dplyr)
library(tidyr)
library(ggplot2)

# Read the data
models_farms_coefficients <- read.csv("models_farms_coefficients.csv")
final_merged_data <- read.csv("final_merged_data.csv")

# Inspect the data
head(models_farms_coefficients)
head(final_merged_data)

# For simplicity, assume final_merged_data has already been loaded correctly with proper column names
# Create the polynomial terms needed for the model
final_merged_data <- final_merged_data %>%
  mutate(
    IR_t_squared = IR^2,
    IT_t_squared = IT^2,
    IR_t_IT_t = IR * IT
  )

# Apply the model coefficients to the data
# Assuming the coefficients are for a model in the form:
# Yield = (Intercept) + (IR_t * IR) + (IT_t * IT) + (IR_t_squared * IR^2) + (IT_t_squared * IT^2) + (IR_t_IT_t * IR * IT)

# Calculate the predicted Yield
final_merged_data <- final_merged_data %>%
  mutate(
    Predicted_Yield = (
      models_farms_coefficients$estimate[models_farms_coefficients$term == "(Intercept)"] +
        models_farms_coefficients$estimate[models_farms_coefficients$term == "IR_t"] * IR +
        models_farms_coefficients$estimate[models_farms_coefficients$term == "IT_t"] * IT +
        models_farms_coefficients$estimate[models_farms_coefficients$term == "IR_t_squared"] * IR_t_squared +
        models_farms_coefficients$estimate[models_farms_coefficients$term == "IT_t_squared"] * IT_t_squared +
        models_farms_coefficients$estimate[models_farms_coefficients$term == "IR_t_IT_t"] * IR_t_IT_t
    )
  )

# Inspect the predictions
head(final_merged_data)

# Plotting Yield vs Predicted_Yield
ggplot(final_merged_data, aes(x = Yield, y = Predicted_Yield)) +
  geom_point() +
  geom_smooth(method = "lm", color = "blue") +
  labs(title = "Yield vs Predicted Yield", x = "Yield", y = "Predicted Yield") +
  theme_minimal()

# Save the results to a new CSV file if needed
write.csv(final_merged_data, "final_merged_data_with_predictions.csv", row.names = FALSE)
# Assuming final_merged_data has columns: district_no, year, Yield, Predicted_Yield
